## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Kafka Subchart parameters
##
kafka:
  enabled: true
  replicaCount: 3
  ## Kafka's Java Heap size
  ##
  heapOpts: -Xmx4096m -Xms4096m
  resources:
    ## Recommended values for cpu and memory requests
    ##
    limits: {}
    requests:
      cpu: 250m
      memory: 5120Mi
  ## Anti Affinity rules set for resiliency and Affinity rules set for optimal performance
  ##
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - kafka
          topologyKey: "kubernetes.io/hostname"
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 50
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - zookeeper
            topologyKey: "kubernetes.io/hostname"
  ## Prometheus Exporters / Metrics
  ##
  metrics:
    ## Prometheus Kafka Exporter: exposes complimentary metrics to JMX Exporter
    ##
    kafka:
      enabled: true
      ## Prometheus Kafka Exporter' resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 128Mi
      ## Service configuration
      ##
      service:
        ## Kafka Exporter Prometheus port to be used in wavefront configuration
        ##
        port: 9308

    ## Prometheus JMX Exporter: exposes the majority of Kafkas metrics
    ##
    jmx:
      enabled: true
      ## Prometheus JMX Exporter' resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 128Mi
      ## Service configuration
      ##
      service:
        ## JMX Exporter Prometheus port
        ##
        port: 5556
  zookeeper:
    enabled: true
    replicaCount: 3
    ## Size in MB for the Java Heap options (Xmx and XMs). This env var is ignored if Xmx an Xms are configured via JVMFLAGS
    ##
    heapSize: 4096
    resources:
      ## Recommended values for cpu and memory requests
      ##
      limits: {}
      requests:
        cpu: 250m
        memory: 5120Mi
    ## Anti Affinity rules set for resiliency
    ##
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - zookeeper
            topologyKey: "kubernetes.io/hostname"    
  ## This value is only used when zookeeper.enabled is set to false.
  ##
  externalZookeeper:
    ## Server or list of external zookeeper servers to use. This is set to the zookeeper deployed as part of this chart
    ##
    servers: []

## Spark Subchart parameters
##
spark:
  enabled: true
  ## Spark master specific configuration
  ##
  master:
    ## Spark container ports
    ##
    webPort: 8080    
    resources:
      ## Recommended values for cpu and memory requests
      ##
      limits: {}
      requests:
        cpu: 250m
        memory: 5120Mi
    ## Anti affinity rules set for resiliency
    ##
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - worker
            topologyKey: "kubernetes.io/hostname"
  ## Spark worker specific configuration
  ##
  worker:
    replicaCount: 2
    ## Spark container ports
    ##
    webPort: 8081    
    ## Anti affinity rules set for resiliency
    ##
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - worker
                    - master
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - spark                    
            topologyKey: "kubernetes.io/hostname"
    resources:
      ## Recommended values for cpu and memory requests
      ##
      limits: {}
      requests:
        cpu: 250m
        memory: 5120Mi
  ## Metrics configuration
  ##
  metrics:
    enabled: true
    ## Annotations for the Prometheus metrics on master nodes
    ##
    masterAnnotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/metrics/'
      prometheus.io/port: '8080'
    ## Annotations for the Prometheus metrics on worker nodes
    ##
    workerAnnotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/metrics/'
      prometheus.io/port: '8081'

## Elasticsearch Subchart parameters
##
elasticsearch:
  enabled: true
  global:
    kibanaEnabled: true
  ## Elasticsearch master-eligible node parameters
  ##
  master:
    ## Number of master-eligible node(s) replicas to deploy
    ##
    replicas: 3
    heapSize: 1048m

    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - master
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - elasticsearch
            topologyKey: "kubernetes.io/hostname"  

    ## Elasticsearch master-eligible container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      ## We usually recommend not to specify default resources and to leave this as a conscious
      ## choice for the user. This also increases chances charts run on environments with little
      ## resources, such as Minikube.
      ##
      limits: {}
      requests:
        cpu: 100m
        memory: 1560Mi
  ## Elasticsearch data node parameters
  ##
  data:
    name: data
    ## Number of data node(s) replicas to deploy
    ##
    replicas: 2
    heapSize: 4096m

    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: 
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - data
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - elasticsearch
            topologyKey: "kubernetes.io/hostname"    

    ## Elasticsearch data container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      limits: {}
      requests:
        cpu: 250m
        memory: 5120Mi

  ## Elasticsearch coordinating-only node parameters
  ##
  coordinating:
    ## Number of coordinating-only node(s) replicas to deploy
    ##
    replicas: 2
    heapSize: 128m

    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - coordinating-only
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - elasticsearch
            topologyKey: "kubernetes.io/hostname"    

    ## Elasticsearch coordinating-only container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      ## We usually recommend not to specify default resources and to leave this as a conscious
      ## choice for the user. This also increases chances charts run on environments with little
      ## resources, such as Minikube.
      ##
      limits: {}
      requests:
        cpu: 100m
        memory: 256Mi

  ## Elasticsearch Prometheus exporter configuration
  ## ref: https://hub.docker.com/r/bitnami/elasticsearch-exporter/tags/
  ##
  metrics:
    enabled: true
    ## Elasticsearch Prometheus exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      requests:
        cpu: 100m
        memory: 128Mi    
    service:
      ## Provide any additional annotations which may be required. This can be used to
      ## set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9114" 

## Logstash Subchart parameters
##
logstash:
  enabled: true
  ## Number of Logstash replicas to deploy
  ##
  replicaCount: 2

  ## Affinity for pod assignment. Evaluated as a template.
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
  ##
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - logstash
          topologyKey: "kubernetes.io/hostname"    

  ## Logstash containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits: {}
    requests: 
      cpu: 100m
      memory: 128Mi  

  ## Prometheus metrics
  ##
  metrics:
    enabled: true
    ## Logstash Prometheus Exporter containers' resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
    limits: {}
    requests:
      cpu: 100m
      memory: 128Mi
    service:
      ## Logstash Prometheus port
      ##
      port: 9198
      ## Annotations for the Prometheus metrics service
      ##
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9198"
        prometheus.io/path: "/metrics"    

## Wavefront Subchart parameters
##
wavefront:
  enabled: false
  ## This is a unique name for the cluster (required)
  ## All metrics will receive a `cluster` tag with this value
  ##
  clusterName: KUBERNETES_CLUSTER_NAME
  ## Wavefront URL (cluster) and API Token (required)
  ##
  wavefront:
    url: https://YOUR_CLUSTER.wavefront.com
    token: YOUR_API_TOKEN
    ## Name of an existing secret containing the token
    ##
    existingSecret:
  ## Wavefront Collector is responsible to get all Kubernetes metrics from your cluster.
  ## It will capture Kubernetes resources metrics available from the kubelets,
  ## as well as auto-discovery capabilities.
  ##
  collector:
    ## Rules based discovery configuration
    ## Ref: https://github.com/wavefrontHQ/wavefront-kubernetes-collector/blob/master/docs/discovery.md
    ##
    resources:
      limits: {}
      requests:
        cpu: 200m
        memory: 10Mi
    discovery:
      enabled: true
      ## Whether to enable runtime discovery configurations
      ## Ref: https://github.com/wavefrontHQ/wavefront-collector-for-kubernetes/blob/master/docs/discovery.md#runtime-configurations
      ##
      enableRuntimeConfigs: true
      ## Can be used to add additional discovery rules
      ##
      config:
      ## auto-discover kafka-exporter
      ##
      - name: kafka-discovery
        type: prometheus
        selectors:
          images:
          - '*bitnami/kafka-exporter*'
        port: 9308
        path: /metrics
        scheme: http
        prefix: kube.kafka.

      ## auto-discover jmx exporter
      ##
      - name: kafka-jmx-discovery
        type: prometheus
        selectors:
          images:
          - '*bitnami/jmx-exporter*'
        port: 5556
        path: /metrics
        scheme: http
        prefix: kube.kafkajmx.

      ## auto-discover elasticsearch
      ##
      - name: elasticsearch-discovery
        type: prometheus
        selectors:
          images:
          - '*bitnami/elasticsearch-exporter*'
        port: 9114
        path: /metrics
        scheme: http
        prefix: kube.elasticsearch.

      ## auto-discover logstash
      ##
      - name: logstash-discovery
        type: prometheus
        selectors:
          images:
          - '*bitnami/logstash-exporter*'
        port: 9198
        path: /metrics
        scheme: http
        prefix: kube.logstash.

      ## auto-discover spark
      ##
      - name: spark-worker-discovery
        type: prometheus
        selectors:
          images:
          - '*bitnami/spark*'
        port: 8081
        path: /metrics/
        scheme: http
        prefix: kube.spark.

      ## auto-discover spark
      ##
      - name: spark-master-discovery
        type: prometheus
        selectors:
          images:
          - '*bitnami/spark*'
        port: 8080
        path: /metrics/
        scheme: http
        prefix: kube.spark.
  proxy:
    ## Wavefront Proxy resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      limits: {}
      requests:
        cpu: 100m
        memory: 5Gi
